services:
  postgres:
    image: postgres:18-alpine
    container_name: ftry-postgres
    restart: unless-stopped
    ports:
      - '${POSTGRES_PORT:-5432}:5432'
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-ftry}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-ftry}
      POSTGRES_DB: ${POSTGRES_DB:-ftry}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-ftry} -d ${POSTGRES_DB:-ftry}']
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - ftry-network

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: ftry-pgadmin
    restart: unless-stopped
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - ftry-network
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  ftry-network:
    driver: bridge
